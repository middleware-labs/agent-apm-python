[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "middleware-io"
version = "2.4.1rc18"
requires-python = ">=3.8"
description = "Middleware's APM tool enables Python developers to effortlessly monitor their applications, gathering distributed tracing, metrics, logs, and profiling data for valuable insights and performance optimization."
authors = [{ name = "middleware-dev" }]
maintainers = [{ name = "middleware-dev" }]
readme = "README.md"
license = { text = "Apache-2.0" }
keywords = [
    "APM",
    "middleware",
    "monitoring",
    "tracing",
    "metrics",
    "logs",
]
dependencies =[
    "distro==1.9.0",
    "opentelemetry-api==1.36.0",
    "opentelemetry-exporter-otlp-proto-grpc==1.36.0",
    "opentelemetry-instrumentation==0.57b0",
    "opentelemetry-proto==1.36.0",
    "opentelemetry-sdk==1.36.0",
    "opentelemetry-semantic-conventions==0.57b0",
    "opentelemetry-util-http==0.57b0",
    "requests==2.32.3",
    "psutil==6.0.0",
    "opentelemetry-processor-baggage==0.57b0",
    "opentelemetry-propagator-b3==1.36.0",
    "opentelemetry-propagator-jaeger==1.36.0",
    "opentelemetry-propagator-aws-xray==1.0.2",
    "opentelemetry-propagator-ot-trace==0.57b0",
    "opentelemetry-propagator-gcp==1.9.0",
    "opentelemetry-sdk-extension-aws==2.0.2",
    "opentelemetry-resource-detector-azure==0.1.5",
    "opentelemetry-resourcedetector-gcp==1.9.0a0",
    "opentelemetry-resourcedetector-docker==0.4.0",
    "gitpython>=3.1.0",
    
    "opentelemetry-instrumentation-aio-pika==0.57b0",
    "opentelemetry-instrumentation-aiohttp-client==0.57b0",
    "opentelemetry-instrumentation-aiohttp-server==0.57b0",
    "opentelemetry-instrumentation-aiokafka==0.57b0",
    "opentelemetry-instrumentation-aiopg==0.57b0",
    "opentelemetry-instrumentation-asgi==0.57b0",
    "opentelemetry-instrumentation-asyncclick==0.57b0",
    "opentelemetry-instrumentation-asyncio==0.57b0",
    "opentelemetry-instrumentation-asyncpg==0.57b0",
    "opentelemetry-instrumentation-aws-lambda==0.57b0",
    "opentelemetry-instrumentation-boto==0.57b0",
    "opentelemetry-instrumentation-boto3sqs==0.57b0",
    "opentelemetry-instrumentation-botocore==0.57b0",
    "opentelemetry-instrumentation-cassandra==0.57b0",
    "opentelemetry-instrumentation-celery==0.57b0",
    "opentelemetry-instrumentation-click==0.57b0",
    "opentelemetry-instrumentation-confluent-kafka==0.57b0",
    "opentelemetry-instrumentation-dbapi==0.57b0",
    "opentelemetry-instrumentation-django==0.57b0",
    "opentelemetry-instrumentation-elasticsearch==0.57b0",
    "opentelemetry-instrumentation-falcon==0.57b0",
    "opentelemetry-instrumentation-fastapi==0.57b0",
    "opentelemetry-instrumentation-flask==0.57b0",
    "opentelemetry-instrumentation-grpc==0.57b0",
    "opentelemetry-instrumentation-httpx==0.57b0",
    "opentelemetry-instrumentation-jinja2==0.57b0",
    "opentelemetry-instrumentation-kafka-python==0.57b0",
    "opentelemetry-instrumentation-logging==0.57b0",
    "opentelemetry-instrumentation-mysql==0.57b0",
    "opentelemetry-instrumentation-mysqlclient==0.57b0",
    "opentelemetry-instrumentation-pika==0.57b0",
    "opentelemetry-instrumentation-psycopg==0.57b0",
    "opentelemetry-instrumentation-psycopg2==0.57b0",
    "opentelemetry-instrumentation-pymemcache==0.57b0",
    "opentelemetry-instrumentation-pymongo==0.57b0",
    "opentelemetry-instrumentation-pymysql==0.57b0",
    "opentelemetry-instrumentation-pymssql==0.57b0",
    "opentelemetry-instrumentation-pyramid==0.57b0",
    "opentelemetry-instrumentation-redis==0.57b0",
    "opentelemetry-instrumentation-remoulade==0.57b0",
    "opentelemetry-instrumentation-requests==0.57b0",
    "opentelemetry-instrumentation-sqlalchemy==0.57b0",
    "opentelemetry-instrumentation-sqlite3==0.57b0",
    "opentelemetry-instrumentation-starlette==0.57b0",
    "opentelemetry-instrumentation-system-metrics==0.57b0",
    "opentelemetry-instrumentation-threading==0.57b0",
    "opentelemetry-instrumentation-tornado==0.57b0",
    "opentelemetry-instrumentation-tortoiseorm==0.57b0",
    "opentelemetry-instrumentation-urllib==0.57b0",
    "opentelemetry-instrumentation-urllib3==0.57b0",
    "opentelemetry-instrumentation-wsgi",
]

[project.optional-dependencies]
profiling = ["pyroscope-io==0.8.5; sys_platform != 'win32'"] 

[project.urls]
Source = "https://github.com/middleware-labs/agent-apm-python.git"
Homepage = "https://docs.middleware.io/docs/apm-configuration/python"

[project.entry-points."opentelemetry_distro"]
middleware_distro = "middleware.distro:MiddlewareDistro"

[project.scripts]
middleware-run = "opentelemetry.instrumentation.auto_instrumentation:run"
middleware-bootstrap = "opentelemetry.instrumentation.bootstrap:run"

[project.entry-points."middleware_instrumentor"]
aio-pika = "opentelemetry.instrumentation.aio_pika:AioPikaInstrumentor"
aiohttp-client = "opentelemetry.instrumentation.aiohttp_client:AioHttpClientInstrumentor"
aiohttp-server = "opentelemetry.instrumentation.aiohttp_server:AioHttpServerInstrumentor"
aiokafka = "opentelemetry.instrumentation.aiokafka:AioKafkaInstrumentor"
aiopg = "opentelemetry.instrumentation.aiopg:AiopgInstrumentor"
asyncclick = "opentelemetry.instrumentation.asyncclick:AsyncclickInstrumentor"
asyncio = "opentelemetry.instrumentation.asyncio:AsyncioInstrumentor"
asyncpg = "opentelemetry.instrumentation.asyncpg:AsyncPGInstrumentor"
aws-lambda = "opentelemetry.instrumentation.aws_lambda:AwsLambdaInstrumentor"
boto = "opentelemetry.instrumentation.boto:BotoInstrumentor"
boto3sqs = "opentelemetry.instrumentation.boto3sqs:Boto3SQSInstrumentor"
botocore = "opentelemetry.instrumentation.botocore:BotocoreInstrumentor"
cassandra = "opentelemetry.instrumentation.cassandra:CassandraInstrumentor"
celery = "opentelemetry.instrumentation.celery:CeleryInstrumentor"
click = "opentelemetry.instrumentation.click:ClickInstrumentor"
confluent-kafka = "opentelemetry.instrumentation.confluent_kafka:ConfluentKafkaInstrumentor"
django = "opentelemetry.instrumentation.django:DjangoInstrumentor"
elasticsearch = "opentelemetry.instrumentation.elasticsearch:ElasticsearchInstrumentor"
falcon = "opentelemetry.instrumentation.falcon:FalconInstrumentor"
fastapi = "opentelemetry.instrumentation.fastapi:FastAPIInstrumentor"
flask = "opentelemetry.instrumentation.flask:FlaskInstrumentor"
grpc = "opentelemetry.instrumentation.grpc:GrpcInstrumentorClient"
httpx = "opentelemetry.instrumentation.httpx:HTTPXClientInstrumentor"
jinja2 = "opentelemetry.instrumentation.jinja2:Jinja2Instrumentor"
kafka-python = "opentelemetry.instrumentation.kafka:KafkaInstrumentor"
logging = "opentelemetry.instrumentation.logging:LoggingInstrumentor"
mysql = "opentelemetry.instrumentation.mysql:MySQLInstrumentor"
mysqlclient = "opentelemetry.instrumentation.mysqlclient:MySQLClientInstrumentor"
pika = "opentelemetry.instrumentation.pika:PikaInstrumentor"
psycopg = "opentelemetry.instrumentation.psycopg:PsycopgInstrumentor"
psycopg2 = "opentelemetry.instrumentation.psycopg2:Psycopg2Instrumentor"
pymemcache = "opentelemetry.instrumentation.pymemcache:PymemcacheInstrumentor"
pymongo = "opentelemetry.instrumentation.pymongo:PymongoInstrumentor"
pymssql = "opentelemetry.instrumentation.pymssql:PyMSSQLInstrumentor"
pymysql = "opentelemetry.instrumentation.pymysql:PyMySQLInstrumentor"
pyramid = "opentelemetry.instrumentation.pyramid:PyramidInstrumentor"
redis = "opentelemetry.instrumentation.redis:RedisInstrumentor"
remoulade = "opentelemetry.instrumentation.remoulade:RemouladeInstrumentor"
requests = "opentelemetry.instrumentation.requests:RequestsInstrumentor"
sqlalchemy = "opentelemetry.instrumentation.sqlalchemy:SQLAlchemyInstrumentor"
sqlite3 = "opentelemetry.instrumentation.sqlite3:SQLite3Instrumentor"
starlette = "opentelemetry.instrumentation.starlette:StarletteInstrumentor"
system-metrics = "opentelemetry.instrumentation.system_metrics:SystemMetricsInstrumentor"
threading = "opentelemetry.instrumentation.threading:ThreadingInstrumentor"
tornado = "opentelemetry.instrumentation.tornado:TornadoInstrumentor"
tortoiseorm = "opentelemetry.instrumentation.tortoiseorm:TortoiseORMInstrumentor"
urllib = "opentelemetry.instrumentation.urllib:URLLibInstrumentor"
urllib3 = "opentelemetry.instrumentation.urllib3:URLLib3Instrumentor"

[tool.pylint.format]
max-line-length = "88"

[tool.isort]
profile = "black"